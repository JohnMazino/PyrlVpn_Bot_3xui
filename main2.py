import asyncio
import logging
import sqlite3
from aiogram import Bot, Dispatcher, F, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, PreCheckoutQuery, LabeledPrice, Message  
from aiogram.utils.keyboard import InlineKeyboardBuilder 
from aiogram.filters.command import Command
from yoomoney import Quickpay
from yoomoney import Client as YClient
from datetime import datetime, timedelta
from py3xui import Api, Client
import os

os.environ["XUI_HOST"] = "https://mazino.freemyip.com:25679/9ILhEoYEonXBKAd"
os.environ["XUI_USERNAME"] = "TzRKWlLfiX"
os.environ["XUI_PASSWORD"] = "zM1yFiDAjt"
  
# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="7734786127:AAE3X--UfFc0_-2H-M2RBl9hImXndRNy0A4")
# —Ç–æ–∫–µ–Ω —é–º–∞–Ω–∏
token = "4100118871649407.284EA3B8F94AEA1802F41597F3E43D5096F5511BC05C51FDAC56CE4BACBADBEC096737AA7AF7CE3ECAD725D8B00A681F7E74E5F18003A1B7CEFE77CAE4F3DDC2804074708819A47B3ECA1C1B66DD0099194631CB438E6A3566BF17980634F7770449988E87442D2B89CE30D6CF602CB825635E7E52F4AC2463CA7156E0BE2277"

ADMIN_ID = 1044887762

# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()

#–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ 
async def is_user_subscribed(user_id: int, channel_username: str) -> bool:
    try:
        chat_member = await bot.get_chat_member(channel_username, user_id)
        return chat_member.status in ['member', 'administrator', 'creator']
    except Exception as e:
        logging.error(f"Failed to check subscription: {e}")
        return False

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQLite
DATABASE = 'users.db'
def init_db():
    with sqlite3.connect(DATABASE) as conn:
        cursor = conn.cursor()
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id BIGINT UNIQUE NOT NULL,
                subscription_date TIMESTAMP,
                subscription_type TEXT NOT NULL
            )
        ''')
        conn.commit()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_user(user_id: int, subscription_type: str = '7_days'):
    subscription_date = datetime.now()
    with sqlite3.connect(DATABASE) as conn:
        cursor = conn.cursor()
        cursor.execute("INSERT OR IGNORE INTO users (user_id, subscription_date, subscription_type) VALUES (?, ?, ?)",
                       (user_id, subscription_date.strftime('%Y-%m-%d %H:%M:%S'), subscription_type))
        conn.commit()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏ –∏ —Ç–∏–ø–∞ –ø–æ–¥–ø–∏—Å–∫–∏
def update_subscription_date(user_id: int, subscription_date: str, subscription_type: str):
    with sqlite3.connect(DATABASE) as conn:
        cursor = conn.cursor()
        cursor.execute("UPDATE users SET subscription_date = ?, subscription_type = ? WHERE user_id = ?",
                       (subscription_date, subscription_type, user_id))
        conn.commit()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
def get_subscription_expiry(user_id: int):
    with sqlite3.connect(DATABASE) as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT subscription_date, subscription_type FROM users WHERE user_id = ?", (user_id,))
        result = cursor.fetchone()
        if result and result[0]:
            subscription_date = datetime.strptime(result[0], '%Y-%m-%d %H:%M:%S')
            subscription_type = result[1]
            # –£—Å–ª–æ–≤–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
            if subscription_type == '7_days':
                expiry_date = subscription_date + timedelta(days=7)
            elif subscription_type == '30_days':
                expiry_date = subscription_date + timedelta(days=30)
            else:
                return None  # –ï—Å–ª–∏ —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None
            return expiry_date
        return None

#–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_all_users():
    with sqlite3.connect(DATABASE) as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT user_id FROM users")
        return cursor.fetchall()

#–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ user_id
def get_user(user_id: int):
    with sqlite3.connect(DATABASE) as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM users WHERE user_id = ?", (user_id,))
        return cursor.fetchone()  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç None, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω

class MyForm(StatesGroup):
    message = State()

#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞(–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –∏ —Ä–µ–∫–ª–∞–º–∞) 
@dp.message(Command(commands=["send_all"]))
async def admin_command(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    if str(user_id) == str(ADMIN_ID):
        await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏')
        await state.set_state(MyForm.message)

@dp.message(MyForm.message)
async def handle_message_for_broadcast(message: types.Message, state: FSMContext):
    state_message = message.text
    user_id = message.from_user.id
    if user_id == ADMIN_ID:
        users = get_all_users()
        for user in users:
            await bot.send_message(user[0], state_message)

        await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ —Ä–∞—Å—Å—ã–ª–∫–∏        

#—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è 7 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ
async def perform_action_for_new_user(user_id: int):
    api = Api("https://mazino.freemyip.com:25679/9ILhEoYEonXBKAd", "TzRKWlLfiX", "zM1yFiDAjt")
    api = Api.from_env()
    api.login()
    client = api.client.get_by_email(user_id)
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    epoch = datetime.fromtimestamp(0)
    x_time = int((datetime.now() - epoch).total_seconds() * 1000.0)
    x_time += 86400000 * 7 - 10800000  # 7 –¥–Ω–µ–π –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    
    new_client = Client(
        id=str(user_id),
        email=str(user_id),
        flow=str("xtls-rprx-vision"),
        enable=True,
        expiryTime=str(x_time)
    )
    
    inbound_id = 1
    api.client.add(inbound_id, [new_client])  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ 7 –¥–Ω–µ–π
    update_subscription_date(user_id, datetime.now().strftime('%Y-%m-%d %H:%M:%S'), subscription_type='7_days')

    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–ø–∏—Å–∫–µ
    await bot.send_message(
        user_id,
        "–Ø –≤–∏–∂—É –≤—ã –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n(‚ÅÑ ‚ÅÑ>‚ÅÑ ‚ñΩ ‚ÅÑ<‚ÅÑ ‚ÅÑ)\n\n"
        "–í–∞—à VPN –¥–æ—Å—Ç—É–ø –Ω–∞ 7 –¥–Ω–µ–π\n" 
        f"```VPN vless://{user_id}@mazino.freemyip.com:443?type=tcp&security=reality&pbk=KlSWg1lI5LM--SBHsodp2xO2T-UFKKhsL6xFnYD6P3o&fp=firefox&sni=yahoo.com&sid=5dacee7cbc26f2&spx=%2F&flow=xtls-rprx-vision#VPN-{user_id}```",
        parse_mode='Markdown',
        disable_web_page_preview=True
    )

#–∫–Ω–æ–ø–∫–∞ –¥–ª—è –∑–≤–µ–∑–¥ 
def payment_keyboard():  
    builder = InlineKeyboardBuilder()  
    builder.button(text=f"–û–ø–ª–∞—Ç–∏—Ç—å 50 ‚≠êÔ∏è", pay=True)  
    return builder.as_markup()

#—Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –∑–≤–µ–∑–¥–∞–º–∏
async def send_invoice_handler(message: Message):  
    prices = [LabeledPrice(label="XTR", amount=50)]  
    await message.answer_invoice(  
        title="–ü–æ–¥–ø–∏—Å–∫–∞ PYRL VPN",  
        description="–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",  
        prices=prices,  
        provider_token="",  
        payload="channel_support",  
        currency="XTR",  
        reply_markup=payment_keyboard(),  
    )

# –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –∑–≤–µ–∑–¥–∞–º–∏
async def pre_checkout_handler(pre_checkout_query: PreCheckoutQuery):  
    await pre_checkout_query.answer(ok=True)

# –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∑–∞ –ø–æ–∫—É–ø–∫—É 
async def success_payment_handler(message: Message):
    user_id = message.from_user.id
    #—Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    api = Api("https://mazino.freemyip.com:25679/9ILhEoYEonXBKAd", "TzRKWlLfiX", "zM1yFiDAjt")
    api = Api.from_env()
    api.login()
    epoch = datetime.fromtimestamp(0)
    x_time = int((datetime.now() - epoch).total_seconds() * 1000.0)
    x_time += 86400000 * 30 - 10800000
    
    new_client = Client(
                id=str(user_id), 
                email=str(user_id), 
                flow=str("xtls-rprx-vision"), 
                enable=True, 
                expiryTime=str(x_time))
    inbound_id = 1
    api.client.add(inbound_id, [new_client])
    update_subscription_date(user_id, datetime.now().strftime('%Y-%m-%d %H:%M:%S'), subscription_type='30_days')
    await message.answer(text="ü•≥–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É!(‚ô°¬∞‚ñΩ¬∞‚ô°)\n"
                                f"```VPN vless://{user_id}@mazino.freemyip.com:443?type=tcp&security=reality&pbk=KlSWg1lI5LM--SBHsodp2xO2T-UFKKhsL6xFnYD6P3o&fp=firefox&sni=yahoo.com&sid=5dacee7cbc26f2&spx=%2F&flow=xtls-rprx-vision#VPN-{user_id}```",
                                parse_mode='Markdown',
                                disable_web_page_preview=True)

#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∑–≤–µ–∑–¥ 
dp.message.register(send_invoice_handler, Command(commands="donate"))
dp.pre_checkout_query.register(pre_checkout_handler)
dp.message.register(success_payment_handler, F.successful_payment)
  
# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
MAC = InlineKeyboardButton(text='MAC', callback_data='MAC_pressed')
IOS = InlineKeyboardButton(text='IOS', callback_data='IOS_pressed')
WINDOWS = InlineKeyboardButton(text='WINDOWS', callback_data='WINDOWS_pressed')
ANDROID = InlineKeyboardButton(text='ANDROID', callback_data='ANDROID_pressed')
BACK_TO_MENU = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º', callback_data='back_to_menu')
INFO_BUTTON = InlineKeyboardButton(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', callback_data='info_pressed')
SUBSCRIBE_BUTTON = InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∫–∞', callback_data='subscribe_pressed')
INSTRUCTIONS_BUTTON = InlineKeyboardButton(text='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', callback_data='instructions_pressed')
MENU_BUTTON = InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data='menu_pressed')
CHECK_PAYMENT_BUTTON = InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É/–ø–æ–¥–ø–∏—Å–∫—É', callback_data='check_payment')

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –¥–≤—É–º—è —Å—Ç–æ–ª–±—Ü–∞–º–∏
keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [MAC, IOS],
    [WINDOWS, ANDROID],
    [MENU_BUTTON]
])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–µ–Ω—é
menu_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [INFO_BUTTON, SUBSCRIBE_BUTTON, INSTRUCTIONS_BUTTON]
])

@dp.callback_query(F.data == 'check_payment')
async def check_payment(callback: CallbackQuery):

    # –ø–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = callback.from_user.id

    # –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –¥–æ–±–∞–≤–ª–∞–µ–º –µ–≥–æ, –Ω—É –≤–¥—Ä—É–≥
    add_user(user_id)
    client = YClient(token)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –æ–ø–µ—Ä–∞—Ü–∏–π
    history = client.operation_history()

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ label –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    user_label = str(user_id)

    found = False # —Ñ–ª–∞–≥ –ø—Ä–æ–≤–µ—Ä–∫–∏

    for operation in history.operations:
        if operation.label == user_label: #and operation.amount == 105.0:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ label –∏ —Å—É–º–º–∞ —Å –∏—Å–∫–æ–º—ã–º
            found = True
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
            operation_time = operation.datetime  
            #operation_date = datetime.fromtimestamp(operation_time)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ datetime
            current_date = datetime.now()


             # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–ª–æ –ª–∏ 30 –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏
            if (current_date - operation_time) < timedelta(days=30):            
                
                api = Api("https://mazino.freemyip.com:25679/9ILhEoYEonXBKAd", "TzRKWlLfiX", "zM1yFiDAjt")
                api = Api.from_env()
                api.login()
                client = api.client.get_by_email(user_id)                
                
                if client is None:
                
                    #—Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    epoch = datetime.fromtimestamp(0)
                    x_time = int((datetime.now() - epoch).total_seconds() * 1000.0)
                    x_time += 86400000 * 30 - 10800000
                    
                    new_client = Client(
                    id=str(user_id), 
                    email=str(user_id), 
                    flow=str("xtls-rprx-vision"), 
                    enable=True, 
                    expiryTime=str(x_time))
                    inbound_id = 1
                    api.client.add(inbound_id, [new_client])
                    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                    
                    update_subscription_date(user_id, datetime.now().strftime('%Y-%m-%d %H:%M:%S'), subscription_type='30_days')
            
                    await callback.message.answer(
                        "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏\n(‚ÅÑ ‚ÅÑ>‚ÅÑ ‚ñΩ ‚ÅÑ<‚ÅÑ ‚ÅÑ)\n\n"
                        f"``` vless://{user_id}@mazino.freemyip.com:443?type=tcp&security=reality&pbk=KlSWg1lI5LM--SBHsodp2xO2T-UFKKhsL6xFnYD6P3o&fp=firefox&sni=yahoo.com&sid=5dacee7cbc26f2&spx=%2F&flow=xtls-rprx-vision#VPN-{user_id}```",
                        parse_mode='Markdown',
                        disable_web_page_preview=True
                    )
                else:
                    await callback.message.answer(
                        "–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –µ—â–µ –∞–∫—Ç–∏–≤–Ω–∞"
                    )
                break
            else:
                await callback.message.answer("–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞.")
            break
    if not found:
        await callback.message.answer(f"–ë–æ—Ç –Ω–µ –Ω–∞—à–µ–ª –æ–ø–ª–∞—Ç—ã –ø–æ id {user_label} , –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ—à–ª–∞ –ª–∏ –æ–ø–ª–∞—Ç–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")

# –ó–¥–µ—Å—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è MAC
@dp.callback_query(F.data == 'MAC_pressed')
async def process_mac_button(callback: CallbackQuery):
    user_id = callback.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    channel_username = "@PYRLVPN" 
    subscribed = await is_user_subscribed(user_id, channel_username)

    if not subscribed:
        await callback.message.edit_text(
            text="üö´ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n"
                 f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {channel_username}",
            parse_mode='Markdown'
        )
        return
    await callback.message.edit_text(
        text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è MAC –±—É–¥–µ—Ç –ø–æ–∑–∂–µ (‚å£ÃÄ_‚å£ÃÅ)',  
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[BACK_TO_MENU]])
    )

# –ó–¥–µ—Å—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è IOS
@dp.callback_query(F.data == 'IOS_pressed')
async def process_ios_button(callback: CallbackQuery):
    user_id = callback.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    channel_username = "@PYRLVPN" 
    subscribed = await is_user_subscribed(user_id, channel_username)

    if not subscribed:
        await callback.message.edit_text(
            text="üö´ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n"
                 f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {channel_username}",
            parse_mode='Markdown'
        )
        return
    await callback.message.edit_text(
        text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è IOS –±—É–¥–µ—Ç –ø–æ–∑–∂–µ (‚å£ÃÄ_‚å£ÃÅ)',  
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[BACK_TO_MENU]])
    )

# –ó–¥–µ—Å—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è WINDOWS
@dp.callback_query(F.data == 'WINDOWS_pressed')
async def process_windows_button(callback: CallbackQuery):
    user_id = callback.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    channel_username = "@PYRLVPN" 
    subscribed = await is_user_subscribed(user_id, channel_username)

    if not subscribed:
        await callback.message.edit_text(
            text="üö´ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n"
                 f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {channel_username}",
            parse_mode='Markdown'
        )
        return
    await callback.message.edit_text(
        text='1. –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ [Nekoray](https://github.com/MatsuriDayo/nekoray/releases/download/3.26/nekoray-3.26-2023-12-09-windows64.zip) –∏–∑ Github \n\n'
            "2. –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É–π—Ç–µ –≤ —É–¥–æ–±–Ω–æ–µ –º–µ—Å—Ç–æ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ nekoray.exe, –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤—ã–±–µ—Ä–∏—Ç–µ Sing-box\n\n"
            "3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞\n\n"
            "4. –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–∞–∂–º–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä -> –¥–æ–±–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞\n\n"
            "5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–µ–∂–∏–º TUN –≤ –≤–µ—Ä—Ö–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É, –Ω–∞–∂–º–∏—Ç–µ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –ø–æ —Å–≤–æ–µ–º—É –ø—Ä–æ—Ñ–∏–ª—é -> –ó–∞–ø—É—Å—Ç–∏—Ç—å\n\n"
            "P.S. –¥–ª—è —é–∑–µ—Ä–æ–≤ [–ª–∏–Ω—É–∫—Å](https://github.com/MatsuriDayo/nekoray/releases) (^‰∫∫^)",
        parse_mode='Markdown', 
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[BACK_TO_MENU]])
    )

# –ó–¥–µ—Å—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è ANDROID
@dp.callback_query(F.data == 'ANDROID_pressed')
async def process_android_button(callback: CallbackQuery):
    user_id = callback.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    channel_username = "@PYRLVPN" 
    subscribed = await is_user_subscribed(user_id, channel_username)

    if not subscribed:
        await callback.message.edit_text(
            text="üö´ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n"
                 f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {channel_username}",
            parse_mode='Markdown'
        )
        return
    await callback.message.edit_text(
        text='1. –°–∫–∞—á–∞—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ [Nekobox](https://github.com/Matsuridayo/NekoBoxForAndroid/releases) –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å github\n(—ç—Ç–æ –≤–∞–∂–Ω–æ(Ôø£„ÉòÔø£))\n\n'
        "2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞\n\n"
        "3. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ñ–∞–π–ª–∏–∫ —Å –ø–ª—é—á–∏–∫–æ–º –≤ –≤–µ—Ä—Ö–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É -> –∏–∑ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞\n\n"
        "4. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –∫–Ω–æ–ø–∫–æ–π –≤–≤–∏–¥–µ —Ç–µ–ª–µ–≥—Ä–∞–º–º—ã —Å–Ω–∏–∑—É –ø–æ —Ü–µ–Ω—Ç—Ä—É\n\n",
        parse_mode='Markdown',
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[[BACK_TO_MENU]])
    )

@dp.callback_query(F.data == 'back_to_menu')
async def back_to_menu(callback: CallbackQuery):
    user_id = callback.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    channel_username = "@PYRLVPN" 
    subscribed = await is_user_subscribed(user_id, channel_username)

    if not subscribed:
        await callback.message.edit_text(
            text="üö´ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n"
                 f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {channel_username}",
            parse_mode='Markdown'
        )
        return
    await callback.message.edit_text(
        text='üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PYRL VPN! üëæ\n\n'
         '–í–∞—à –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫ –≤ –º–∏—Ä–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞! –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–π–º—ë—Ç –≤—Å–µ–≥–æ –ø–∞—Ä—É –º–≥–Ω–æ–≤–µ–Ω–∏–π (‚îÄ‚Äø‚Äø‚îÄ).\n\n'
         '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª [–∑–¥–µ—Å—å](https://t.me/PYRLVPN), —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –∞–∫—Ü–∏–π!\n\n'
         '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—ë —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, –∏ —è –ø—Ä–∏—à–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏!\n\n'
         "–û–∂–∏–¥–∞–π—Ç–µ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π! ^-^ ",
        reply_markup=keyboard,
        parse_mode='Markdown',
    )

@dp.callback_query(F.data == 'menu_pressed')
async def menu_pressed(callback: CallbackQuery):
    user_id = callback.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    channel_username = "@PYRLVPN" 
    subscribed = await is_user_subscribed(user_id, channel_username)

    if not subscribed:
        await callback.message.edit_text(
            text="üö´ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n"
                 f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {channel_username}",
            parse_mode='Markdown'
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    expiry_date = get_subscription_expiry(user_id)

    if expiry_date:
        remaining_time = expiry_date - datetime.now()
        remaining_days = remaining_time.days
        remaining_hours, remainder = divmod(remaining_time.seconds, 3600)
        remaining_minutes, remaining_seconds = divmod(remainder, 60)

        response_text = (
            f'–í–∞—à ID: {user_id}\n'
            f'–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏ –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: {remaining_days} –¥–Ω–µ–π, '
            f'{remaining_hours} —á–∞—Å–æ–≤, {remaining_minutes} –º–∏–Ω—É—Ç\n'
            '–ö–æ–Ω—Ç–∞–∫—Ç—ã —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏: [–ø–æ–¥–¥–µ—Ä–∂–∫–∞](https://t.me/gamplez)\n\n'
        )
    else:
        response_text = (
            '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.\n'
            f'–í–∞—à ID: {user_id}\n'
            '–ö–æ–Ω—Ç–∞–∫—Ç—ã —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏: [–ø–æ–¥–¥–µ—Ä–∂–∫–∞](https://t.me/gamplez)\n\n'
        )
    await callback.message.edit_text(response_text, reply_markup=menu_keyboard, parse_mode='Markdown')

@dp.callback_query(F.data == 'instructions_pressed')
async def instructions_pressed(callback: CallbackQuery):
    user_id = callback.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    channel_username = "@PYRLVPN" 
    subscribed = await is_user_subscribed(user_id, channel_username)

    if not subscribed:
        await callback.message.edit_text(
            text="üö´ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n"
                 f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {channel_username}",
            parse_mode='Markdown'
        )
        return
    await callback.message.edit_text(
        text='üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PYRL VPN! üëæ\n\n'
         '–í–∞—à –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫ –≤ –º–∏—Ä–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞! –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–π–º—ë—Ç –≤—Å–µ–≥–æ –ø–∞—Ä—É –º–≥–Ω–æ–≤–µ–Ω–∏–π (‚îÄ‚Äø‚Äø‚îÄ).\n\n'
         '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª [–∑–¥–µ—Å—å](https://t.me/PYRLVPN), —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –∞–∫—Ü–∏–π!\n\n'
         '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—ë —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, –∏ —è –ø—Ä–∏—à–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏!\n\n'
         "–û–∂–∏–¥–∞–π—Ç–µ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π! ^-^ ",
        reply_markup=keyboard,
        parse_mode='Markdown',
    )

@dp.callback_query(F.data == 'info_pressed')
async def info_pressed(callback: CallbackQuery):
    user_id = callback.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    channel_username = "@PYRLVPN" 
    subscribed = await is_user_subscribed(user_id, channel_username)

    if not subscribed:
        await callback.message.edit_text(
            text="üö´ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n"
                 f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {channel_username}",
            parse_mode='Markdown'
        )
        return
    info_text = (
        "[–ê–≤—Ç–æ—Ä](https://github.com/JohnMazino) –ø—Ä–æ–µ–∫—Ç–∞\n\n"
        "–ü–æ–∫–∞ —á—Ç–æ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ —Ä–µ–≥–∏–æ–Ω –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã (Ô∏∂Ô∏πÔ∏∫)\n\n"
        "Vpn –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–µ vless –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ xtls-rprx-vision –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∏ —Å–∫—Ä—ã—Ç–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞ –ø–æ–¥ —Å–∞–π—Ç www.yahoo.com \n\n"
        "–ë–æ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–æ–Ω—Å–æ–ª–µ 3x-ui, —á—Ç–æ –¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —é–∑–µ—Ä–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø—Ä–æ—Ñ–∏–ª—å\n\n"
        "–ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–æ–¥–ø–∏—Å–∫–µ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ—Å—Ç—É–ø –Ω–∞ 30 –¥–Ω–µ–π, –±–µ–∑–ª–∏–º–∏—Ç –ø–æ —Ç—Ä–∞—Ñ–∏–∫—É –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º, –∞ —Ç–∞–∫ –∂–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–∞—á–∞—Ç—å –ª—é–±–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ BitTorrent(–Ω—É –∏ –≤ –¥—Ä—É–≥–∏—Ö –∫–ª–∏–µ–Ω—Ç–∞—Ö —Ç–æ–∂–µ)(Ôºæ‚ñΩÔºæ)\n\n"
        "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–±–æ—Ç–æ–π –±–æ—Ç–∞ –∏–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –∫–æ–¥ –±–æ—Ç–∞, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ [–ø–æ–¥–¥–µ—Ä–∂–∫—É](https://t.me/gamplez)"
    )
    await callback.message.edit_text(info_text, parse_mode='Markdown', reply_markup=InlineKeyboardMarkup(inline_keyboard=[[MENU_BUTTON]]))

@dp.callback_query(F.data =='subscribe_pressed')
async def subscribe_pressed(callback: CallbackQuery):
    # —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
    user_id = callback.from_user.id
    quickpay = Quickpay(
            receiver="4100118871649407",
            quickpay_form="shop",
            targets="subscribe pyrl vpn",
            paymentType="SB",
            sum=105,
            label=str(user_id)
            )
    pay_button = InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π/—é–º–∞–Ω–∏', url=quickpay.redirected_url)
    star_payment_button = InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å 50 ‚≠êÔ∏è', callback_data='donate_star')

    subscribe_text = (
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ: –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–º –≤—ã–¥–∞–µ—Ç—Å—è –ª–∏—á–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ(—Ä–µ–≥–∏–æ–Ω –ù–∏–¥–µ—Ä–ª–∞–Ω–¥–∞—Ö), –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥–æ–π /start –∏–ª–∏ —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞\n\n"
        "–¢–∞–∫–∂–µ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è –æ–ø–ª–∞—Ç—ã –∑–≤–µ–∑–¥–∞–º–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ /donate\n\n"
        "–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 30 –¥–Ω–µ–π, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—á–Ω–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã   (‚Ä¢ œâ ‚Ä¢) \n\n "
        "–í–ù–ò–ú–ê–ù–ò–ï‚ùó‚ùó‚ùó –í –±–æ—Ç–µ –Ω–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–≤—Ç–æ—Ä–Ω—É—é –æ–ø–ª–∞—Ç—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –±–æ—Ç –Ω–∞–ø–∏—à–µ—Ç '–ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É' –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å'."
        )
    await callback.message.edit_text(subscribe_text,  parse_mode='Markdown', reply_markup=InlineKeyboardMarkup(inline_keyboard=[[pay_button, star_payment_button], [CHECK_PAYMENT_BUTTON], [MENU_BUTTON]]))

# /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    user_id = message.from_user.id
    channel_username = "@PYRLVPN"
    subscribed = await is_user_subscribed(user_id, channel_username)
    

    if not subscribed:
        await message.answer(
            text="üö´ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n"
                 f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {channel_username}",
            parse_mode='Markdown'
        )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    existing_user = get_user(user_id)  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    if existing_user is None:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –Ω—É–∂–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        add_user(user_id, subscription_type='7_days')

        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–∞–∫–æ–µ-—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await perform_action_for_new_user(user_id)

    await message.answer(
        text='üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PYRL VPN! üëæ\n\n'
             '–í–∞—à –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫ –≤ –º–∏—Ä–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞! –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–π–º—ë—Ç –≤—Å–µ–≥–æ –ø–∞—Ä—É –º–≥–Ω–æ–≤–µ–Ω–∏–π (‚îÄ‚Äø‚Äø‚îÄ).\n\n'
             '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª [–∑–¥–µ—Å—å](https://t.me/PYRLVPN), —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –∞–∫—Ü–∏–π!\n\n'
             '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—ë —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, –∏ —è –ø—Ä–∏—à–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏!\n\n'
             "–û–∂–∏–¥–∞–π—Ç–µ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π! ^-^ ",
        parse_mode='Markdown',
        disable_web_page_preview=False,
        reply_markup=keyboard
    )

# /menu
@dp.message(Command("menu"))
async def cmd_menu(message: types.Message):
    user_id = message.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    channel_username = "@PYRLVPN" 
    subscribed = await is_user_subscribed(user_id, channel_username)

    if not subscribed:
        await message.answer(
            text="üö´ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n"
                 f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {channel_username}",
            parse_mode='Markdown'
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    expiry_date = get_subscription_expiry(user_id)

    if expiry_date:
        remaining_time = expiry_date - datetime.now()
        remaining_days = remaining_time.days
        remaining_hours, remainder = divmod(remaining_time.seconds, 3600)
        remaining_minutes, remaining_seconds = divmod(remainder, 60)

        response_text = (
            f'–í–∞—à ID: {user_id}\n'
            f'–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏ –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: {remaining_days} –¥–Ω–µ–π, '
            f'{remaining_hours} —á–∞—Å–æ–≤, {remaining_minutes} –º–∏–Ω—É—Ç\n'
            '–ö–æ–Ω—Ç–∞–∫—Ç—ã —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏: [–ø–æ–¥–¥–µ—Ä–∂–∫–∞](https://t.me/gamplez)\n\n'
        )
    else:
        response_text = (
            '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.\n'
            f'–í–∞—à ID: {user_id}\n'
            '–ö–æ–Ω—Ç–∞–∫—Ç—ã —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏: [–ø–æ–¥–¥–µ—Ä–∂–∫–∞](https://t.me/gamplez)\n\n'
        )

    await message.answer(response_text, reply_markup=menu_keyboard, parse_mode='Markdown')

# /info
@dp.message(Command("info"))
async def cmd_info(message: types.Message):
    user_id = message.from_user.id
    channel_username = "@PYRLVPN"  # Replace with your channel username
    subscribed = await is_user_subscribed(user_id, channel_username)

    if not subscribed:
        await message.answer(
            text="üö´ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n"
                 f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {channel_username}",
            parse_mode='Markdown'
        )
        return
    info_text = (
        "[–ê–≤—Ç–æ—Ä](https://github.com/JohnMazino) –ø—Ä–æ–µ–∫—Ç–∞\n\n"
        "–ü–æ–∫–∞ —á—Ç–æ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ —Ä–µ–≥–∏–æ–Ω –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã (Ô∏∂Ô∏πÔ∏∫)\n\n"
        "Vpn –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–µ vless –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ xtls-rprx-vision –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∏ —Å–∫—Ä—ã—Ç–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞ –ø–æ–¥ —Å–∞–π—Ç www.yahoo.com \n\n"
        "–ë–æ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–æ–Ω—Å–æ–ª–µ 3x-ui, —á—Ç–æ –¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —é–∑–µ—Ä–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø—Ä–æ—Ñ–∏–ª—å\n\n"
        "–ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–æ–¥–ø–∏—Å–∫–µ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ—Å—Ç—É–ø –Ω–∞ 30 –¥–Ω–µ–π, –±–µ–∑–ª–∏–º–∏—Ç –ø–æ —Ç—Ä–∞—Ñ–∏–∫—É –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º, –∞ —Ç–∞–∫ –∂–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–∞—á–∞—Ç—å –ª—é–±–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ BitTorrent(–Ω—É –∏ –≤ –¥—Ä—É–≥–∏—Ö –∫–ª–∏–µ–Ω—Ç–∞—Ö —Ç–æ–∂–µ)(Ôºæ‚ñΩÔºæ)\n\n"
        "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–±–æ—Ç–æ–π –±–æ—Ç–∞ –∏–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –∫–æ–¥ –±–æ—Ç–∞, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ [–ø–æ–¥–¥–µ—Ä–∂–∫—É](https://t.me/gamplez)"
    )
    await message.answer(info_text, reply_markup=InlineKeyboardMarkup(inline_keyboard=[[MENU_BUTTON]]), parse_mode='Markdown')

# /subscribe
@dp.message(Command("subscribe"))
async def subscribe(message: types.Message):
# —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
    user_id = message.from_user.id
    channel_username = "@PYRLVPN"  # Replace with your channel username
    subscribed = await is_user_subscribed(user_id, channel_username)

    if not subscribed:
        await message.answer(
            text="üö´ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n"
                 f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {channel_username}",
            parse_mode='Markdown'
        )
        return
    quickpay = Quickpay(
            receiver="4100118871649407",
            quickpay_form="shop",
            targets="subscribe pyrl vpn",
            paymentType="SB",
            sum=105,
            label=str(user_id)
            )
    pay_button = InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π/—é–º–∞–Ω–∏', url=quickpay.redirected_url)
    star_payment_button = InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å 50 ‚≠êÔ∏è', callback_data='donate_star')
    
    
    
    subscribe_text = (
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ: –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–º –≤—ã–¥–∞–µ—Ç—Å—è –ª–∏—á–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ(—Ä–µ–≥–∏–æ–Ω –ù–∏–¥–µ—Ä–ª–∞–Ω–¥–∞—Ö), –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥–æ–π /start –∏–ª–∏ —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞\n\n"
        "–¢–∞–∫–∂–µ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è –æ–ø–ª–∞—Ç—ã –∑–≤–µ–∑–¥–∞–º–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ /donate\n\n"
        "–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 30 –¥–Ω–µ–π, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—á–Ω–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã   (‚Ä¢ œâ ‚Ä¢) \n\n "
        "–í–ù–ò–ú–ê–ù–ò–ï‚ùó‚ùó‚ùó –í –±–æ—Ç–µ –Ω–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–≤—Ç–æ—Ä–Ω—É—é –æ–ø–ª–∞—Ç—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –±–æ—Ç –Ω–∞–ø–∏—à–µ—Ç '–ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É' –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å'."
        )
    await message.answer(subscribe_text,  parse_mode='Markdown', reply_markup=InlineKeyboardMarkup(inline_keyboard=[[pay_button, star_payment_button], [CHECK_PAYMENT_BUTTON], [MENU_BUTTON]]))
    
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–ø–ª–∞—Ç—ã –∑–≤–µ–∑–¥–∞–º–∏
@dp.callback_query(F.data == 'donate_star')
async def donate_star(callback: CallbackQuery):
    await send_invoice_handler(callback.message) 

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    init_db()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    asyncio.run(main())
